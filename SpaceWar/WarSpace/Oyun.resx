<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CkpBaP5Tfq5HAgJAtG4CKE8C6Oxmh0Yl3TUxmCQIAFrMHWA73bUW54gAECtz9XMGgK7Jtudzfq8+agSA
        WPE5AKRtJfad+m0IAoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0AoA0
        AoA0AoA0AoA0AoA0rQAYWAaLUADm6v+sSa9QoBUAk8tgEQqgkGhU0q7PrmS2WsyEAigmw2qmZy06pZBs
        VtNO/w3943cA9Xxiv5BslCbP5m5vp7u3H8xdDELXXm4rqc7+V8+sRURKIYDm+9EM25lebXE0fTpxp/wh
        AIfeF6pm+u2VU3ZBcRLaApn7wG52YC06pb50MFy7dOrp4d5TOgSbHbbbZ4DuwxfPN165f1L3iVAAZjvk
        +LVlXv5Pv3njeKWeUQrAsc8BismmOZDsLR00c8edB2f91Yvx4zeXT3872vhptH7Ve3jeyo3rS4fm1O7U
        XFHPCAVgFFwazTA9kwxbuZP+6vnh1y/Hj38+//bt9Xd/XD39/ezJL0cbr4frV62V8W5mQADR0QrA8d8F
        Gq1fn2++q2b61jqioxWA46a7oP85NUTRewTgkHD5+NmjH3kXKE4E4JDa4nCwepFP8Dvb8SEAh1QzPXPq
        tRYRKQJwSCkIa9mRtYhIEYBD8gv1copvLMSKACCNACCNACCNACCNACCNACCNACCNACCNACCNACCNACCN
        ACCNACCNACCNACCNACCNACCNALC3lWjIPpGXAESZi/7m30tB2Mwd3/xRCgGIMhe9+edkcGAQ1hZHo7Uf
        ppMT5O4DBCCnkGiUglY13aukOrXFoXntH65dnW++PVh/2Xlwti02o4kARN1+AGMl3Rmt/3DzRykEIKp8
        60nx5obQWD66+aMUAhB1exJZPlGXfSIvAUAaAUAaAUAaAUAaAUAaAUAaAUAaAUAaAUDYwt7/AfrRUHPT
        DzYXAAAAAElFTkSuQmCC
</value>
  </data>
</root>